name: Deploy to Linux Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          # Check OS and install git if not present
          if ! command -v git &> /dev/null; then
            echo "Git not found, attempting to install..."
            if command -v apt-get &> /dev/null; then
              apt-get update && apt-get install -y git
            elif command -v yum &> /dev/null; then
              yum install -y git
            elif command -v apk &> /dev/null; then
              apk add --no-cache git
            else
              echo "ERROR: Cannot install git - unknown package manager"
              exit 1
            fi
          fi
          
          # Check if project directory exists, create if not
          if [ ! -d /root/fenix ]; then
            cd /root
            git clone https://github.com/${{ github.repository }}.git fenix
            cd fenix
          else
            cd /root/fenix
            git pull origin main
          fi
          
          # Copy .env.example to .env if .env doesn't exist
          if [ ! -f .env ]; then
            if [ -f .env.example ]; then
              cp .env.example .env
            else
              echo "WARNING: .env.example not found, creating minimal .env"
              touch .env
            fi
          fi
          
          # Run deployment with modern docker compose
          docker compose down || true
          docker compose build
          docker compose up -d
          docker compose ps
          
    - name: Notify deployment status
      if: always()
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "$(date): GitHub Actions deployment successful" >> /var/log/fenix-deploy.log
          else
            echo "$(date): GitHub Actions deployment failed" >> /var/log/fenix-deploy.log
          fi